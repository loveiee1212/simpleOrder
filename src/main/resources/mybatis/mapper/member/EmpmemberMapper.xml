<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.team2.simpleOrder.dao.member.IEmpMemberDao">
	
	<!-- 직원 권한명 가져오기 -->
	<select id="getPst_name" parameterType="hashmap" resultType="string">
		SELECT PST_NAME
		FROM EMP
		WHERE C_CODE = #{c_code} AND EMP_CODE = #{emp_code}
	</select>

	<!-- 월별 출퇴근 불러오기 -->
	<select id="getTime" parameterType="hashmap" resultType="hashmap">
		SELECT * FROM ATTENDANCE WHERE C_CODE = #{c_code} AND
		EMP_CODE = LPAD(#{emp_code},5,0)
		AND DATE(BD_DATE) BETWEEN #{f_date} AND #{l_date}
	</select>
	
	<!-- 월별 전체직원 출퇴근 불러오기 -->
	<select id="showAllWorkTime" parameterType="hashmap" resultType="hashmap">
		SELECT E.EMP_CODE, E.EMP_NAME, E.EMP_STATUS , P.PST_NAME, 
				SUM(TIMESTAMPDIFF(HOUR,A.AD_INTIME,A.AD_OUTTIME)) AS HOUR, SUM(TIMESTAMPDIFF(MINUTE,A.AD_INTIME,A.AD_OUTTIME)) AS MINUTE
		FROM EMP AS E INNER JOIN POSITION AS P ON E.C_CODE = P.C_CODE AND E.PST_POSITION = P.PST_POSITION
						INNER JOIN ATTENDANCE AS A ON E.C_CODE = A.C_CODE AND E.EMP_CODE = A.EMP_CODE
		WHERE E.C_CODE=#{c_code} AND DATE(A.BD_DATE) BETWEEN #{f_date} AND #{l_date}
		GROUP BY E.EMP_CODE, E.EMP_NAME, E.EMP_STATUS, P.PST_NAME
	</select>

	<!-- 일별 출퇴근 불러오기 -->
	<select id="getAdTime" parameterType="hashmap" resultType="hashmap">
		SELECT AD_INTIME, AD_OUTTIME FROM ATTENDANCE WHERE C_CODE= #{c_code} AND EMP_CODE = LPAD(#{emp_code},5,0)
		AND DATE(BD_DATE)=#{bd_date}
	</select>
	
	<!-- 일별 전체직원 출퇴근 불러오기 -->
	<select id="showWorkTime" parameterType="hashmap" resultType="hashmap">
		SELECT E.EMP_CODE, E.EMP_NAME, A.AD_INTIME, A.AD_OUTTIME,
			 TIMESTAMPDIFF(HOUR,A.AD_INTIME,A.AD_OUTTIME) AS HOUR, TIMESTAMPDIFF(MINUTE,A.AD_INTIME,A.AD_OUTTIME)%60 AS MINUTE
		FROM EMP AS E INNER JOIN ATTENDANCE AS A ON E.C_CODE = A.C_CODE AND E.EMP_CODE = A.EMP_CODE
		WHERE E.C_CODE = #{c_code} AND DATE(A.BD_DATE) = #{bd_date}
	</select>

	<!-- 출근 시간 입력 -->
	<insert id="insertAd_inTime" parameterType="hashmap">
		INSERT INTO
		ATTENDANCE (C_CODE,BD_DATE,EMP_CODE,AD_INTIME,AD_OUTTIME)
		VALUES (#{c_code},#{bd_date},LPAD(#{emp_code},5,0),#{ad_inTime},NULL)
	</insert>

	<!-- 퇴근 시간 입력 -->
	<update id="insertAd_outTime" parameterType="hashmap">
		UPDATE ATTENDANCE
		SET AD_OUTTIME = #{ad_outTime}
		WHERE C_CODE=#{c_code} AND BD_DATE=#{bd_date} AND EMP_CODE=LPAD(#{emp_code},5,0)
	</update>
	
	<!-- 출퇴근 시간 변경 -->
	<update id="updateWorkTime" parameterType="hashmap">
		UPDATE ATTENDANCE
		SET AD_INTIME = #{ad_inTime}, AD_OUTTIME = #{ad_outTime}
		WHERE C_CODE =#{c_code} AND DATE(BD_DATE) = #{bd_date} AND EMP_CODE = LPAD(#{emp_code},5,0)
	</update>

	<!-- 직원 리스트 출력 -->
	<select id="getEmpList" parameterType="hashmap" resultType="hashmap">
		SELECT E.EMP_CODE, E.EMP_NAME, E.EMP_STATUS, A.AD_OUTTIME, A.AD_INTIME
		FROM EMP AS E LEFT JOIN ATTENDANCE AS A ON E.C_CODE = A.C_CODE AND E.EMP_CODE = A.EMP_CODE
		WHERE ((A.BD_DATE IN (SELECT MAX(BD_DATE) FROM ATTENDANCE WHERE C_CODE=#{c_code} GROUP BY EMP_CODE) OR ( E.C_CODE=#{c_code} AND A.BD_DATE IS NULL)
			AND E.EMP_STATUS ="1")) AND E.C_CODE = #{c_code} OR 
			((A.BD_DATE IN (SELECT MAX(BD_DATE) FROM ATTENDANCE WHERE C_CODE=#{c_code} GROUP BY EMP_CODE) OR ( E.C_CODE=#{c_code} AND A.BD_DATE IS NULL)
			AND E.EMP_STATUS ="-1")) AND E.C_CODE = #{c_code}
		GROUP BY E.EMP_CODE
	</select>
	
	<!-- 직원 정보 출력 -->
	<select	id="getEmpInfo" parameterType="hashmap" resultType="hashmap">
		SELECT E.EMP_CODE, E.EMP_NAME, P.PST_NAME
		FROM EMP AS E INNER JOIN POSITION AS P ON E.C_CODE = P.C_CODE AND E.PST_POSITION = P.PST_POSITION
		WHERE E.C_CODE = #{c_code} AND E.EMP_CODE = LPAD(#{emp_code},5,0)
	</select>
	
</mapper>